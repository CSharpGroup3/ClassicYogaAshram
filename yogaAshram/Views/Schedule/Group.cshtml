@using System.Collections
@using System.Globalization
@model Schedule

@{
	ViewBag.Title = "Расписание группы";
	Layout = "_Layout";
}


@if (User.IsInRole("chief")||User.IsInRole("manager") )

	    {<h2 class="text-center">Расписание группы "@Model.Group.Name"</h2>
 
 <p><strong>Тренер</strong> - @Model.Group.CoachName</p>
 <hr>
 <div id="reloadSchedule">
 	@foreach (var day in @Model.DayOfWeeksString)
 	{
 		<p>@day</p>
 	}
 
 	<p>Начало - @Model.StartTime</p>
 	<p>Окончание - @Model.FinishTime</p>
 	<button data-toggle="modal" data-target="#scheduleCreate" class="btn btn-outline-dark">Изменить расписание</button>
 	<a asp-action="Index" asp-controller="Schedule" asp-route-branchId="@Model.BranchId" class="btn btn-outline-dark">Назад</a>
 
 	<p class="text-hide" id="datesForEdit">@ViewBag.DaysArray</p>
 	<p class="text-hide" id="timeForEditStart">@Model.StartTime</p>
 	<p class="text-hide" id="timeForEditFinish">@Model.FinishTime</p>
 </div>
 
 <h3>Посещаемость клиентов за @ViewBag.Date</h3>
 @if (Enumerable.Count(@ViewBag.Clients) == 0)
 {
 	<p>Не найдено ни одного клиента</p>
 }
 else
 {
 	<label>Отметить всех</label>
 	<div class="attendance">
 		<input type="checkbox" id="checkAll"/>
 		<span></span>
 	</div>
 	<table class="table">
 		<thead>
 		<tr>
 			<th scope="col">Id клиента</th>
 			<th scope="col">Имя клиента</th>
 			<th scope="col">Статус</th>
 			<th scope="col">Пришел<th>
 			<th scope="col">Комментарий</th>
 		</tr>
 		</thead>
 	
 		<tbody>
 		@foreach (Client client in (IEnumerable) @ViewBag.Clients)
 		{    
 			<tr>
 				<td>@client.Id</td>
 				<td>@client.NameSurname</td>
 				<td>@client.ClientType</td>
 				<td><div class="attendance">
 						<input type="checkbox" />
 						<span></span>
 					</div>
 				</td>
 			<td><textarea type="text" class="form-control" rows="1"></textarea></td>
 			</tr>
 		}
 		
 		</tbody>
 	</table>
 <button class="btn btn-outline-dark" id="submitAttendance">Отправить данные на сервер</button>
 }
	<div class="modal fade w-100" id="scheduleCreate" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLongTitle">Изменить расписание</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form id="editSchedule">
					<input type="hidden" asp-for="GroupId" value="@Model.GroupId" id="groupIdInput">
					<label>Выберите цвет:</label>
					<select name="color" class="form-control mb-2 w-25" id="selectColor">
						<option value="primary" class="bg-primary">Синий</option>
						<option value="success" class="bg-success">Зеленый</option>
						<option value="danger" class="bg-danger">Красный</option>
						<option value="warning" class="bg-warning">Желтый</option>
						<option value="info" class="bg-info">Голубой</option>
						<option value="dark" class="bg-dark text-light">Черный</option>
					</select>
					<label class="mt-2">Время начала занятия:</label>
					<input type="time" id="timeInputStart" name="scheduleTime" class="form-control w-25" onchange="validateSalaryFrom()">
					<label class="mt-2">Время окончания занятия:</label>
					<input type="time" id="timeInputFinish" name="scheduleFinishTime" class="form-control w-25" onchange="validateSalaryTo()">
               		
               		
					<div class="mb-2 mt-2">
						<label class="">Выберите дни:</label>
						<input name="dayOfWeeks" id="dayOfWeekInput" class="form-control w-50 mb-4" readonly>
						<div class="mt-2 mb-2">
							<div id="weekdays"> </div> 
						</div>	
					</div>
					<button class="btn btn-outline-dark mt-4" type="submit" id="submitBtn">Изменить</button>
					<div class="mt-2 text-danger" id="error"></div>
				</form>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
			</div>
		</div>
	</div>
</div>

}

else if ( User.IsInRole("seller") ||User.IsInRole("admin") )
{
	<div class="row d-flex justify-content-center">
    <div class="col-md-6">
        <h2>Записать на пробный</h2>
        <form method="post" asp-controller="Clients" asp-action="CreateClients">
            <div>
                <span asp-validation-for="@Model.ClientsCreateModelView.NameSurname"></span>
                <label>Ф.И.О</label><br/>
                <input class="form-control mb-4" asp-for="@Model.ClientsCreateModelView.NameSurname"/>
            </div>
            <div>
                <span asp-validation-for="@Model.ClientsCreateModelView.PhoneNumber"></span>
                <label>Номер телефона</label><br/>
                <input class="form-control mb-4" asp-for="@Model.ClientsCreateModelView.PhoneNumber"/>
            </div>
            <div>
	            <label class="form-control mb-4">Группа:@Model.Group.Name</label>
	        
                    <input class="form-control mb-4" asp-for="@Model.ClientsCreateModelView.GroupId" value="@Model.GroupId" type="hidden">
            </div>
            <div class="form_row">
                <label>
                    Статус клиента
                    <select asp-for="@Model.ClientsCreateModelView.ClientType" class="form-control mb-4">
                        <option value="0" class="form-control mb-4">Пробник</option >
                    </select>
                </label>
            </div>
              <div class="form_row">
                            <label>
                              Количество занятии
                              <select asp-for="@Model.ClientsCreateModelView.LessonNumbers" class="form-control mb-4">
                                  <option value="1" class="form-control mb-4">1 пробное занятие</option>
                                  <option value="3" class="form-control mb-4">3 пробных занятии</option>
                              </select>
                            </label>
                        </div>
            <div>
                <div>
                 
	                <label class="form-control mb-4">Дата занятия: @Model.ChosenDate</label><br/>
	               
                    <input class="form-control mb-4" asp-for="@Model.ClientsCreateModelView.StartDate" type="hidden" value="@Model.ChosenDate"  >
                </div>
                <div>
                    <span asp-validation-for="@Model.ClientsCreateModelView.Comment"></span>
                    <label>Коментарии</label><br/>
                    <input class="form-control mb-4" asp-for="@Model.ClientsCreateModelView.Comment" >
                </div>
                
                <br/>
                <input class="btn btn-info btn-block my-4" type="submit" value="Добавить"/>
            </div>
        </form>
    </div>
</div>
	
}



@section Scripts{
	
	 @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
	
	
	<script >
	$("#weekdays").weekLine({
            mousedownSel: false,            
            dayLabels: ["Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье"], 
            onChange: function () {
                   $("#dayOfWeekInput").val(
                           $(this).weekLine('getSelected')
              );
            }
     });
	</script>
    <script>      
       var groupsIds =  $('#groupIdArray').text();            
       $.each(groupsIds.split(' '), function(index, value) {
         $('select > option').filter(function () {
         	return $(this).val() == value
         }).prop('disabled', true)
       });      
    </script>
	<script >
  function validateSalaryTo(){
         var timeFrom = parseInt($("#timeInputStart").val());
    var timeTo = parseInt($("#timeInputFinish").val());     
           if (timeTo < timeFrom) {
           	 $('#error').text('Время начала занятия не может больше времени окончания').show().delay(1500).fadeOut();
              $('#submitBtn').prop('disabled', true);
            } 
          else {
              $('#submitBtn').prop('disabled', false);             
            }
          };
  function validateSalaryFrom(){
           var timeFrom = parseInt($("#timeInputStart").val());
      var timeTo = parseInt($("#timeInputFinish").val());     
             if (timeTo < timeFrom) {
                $('#submitBtn').prop('disabled', true);
                 $('#error').text('Время начала занятия не может больше времени окончания').show().delay(1500).fadeOut();
              } 
            else {
                $('#submitBtn').prop('disabled', false);            
              }
            };
</script>
	<script >
	function validateForm() {
   
        var timeStart = $('#timeInputStart').val();
        var timeFinish = $('#timeInputFinish').val();
        var week = $('#dayOfWeekInput').val();
       
            if (week === "") {
            $('#error').text('Необходимо выбрать день').show().delay(1500).fadeOut();
            return false;
            }
            else if (timeStart === ""){
            $('#error').text('Необходимо выбрать время начала занятия').show().delay(1500).fadeOut();
                return false;
            }
            else if (timeFinish === ""){
            $('#error').text('Необходимо выбрать время окончания занятия').show().delay(1500).fadeOut();
                return false;
            }
            else {
            	
            	$.ajax({
                url : '@Url.Action("Edit", "Schedule")',
                type : 'POST',
                data : {              
                'groupId' : $("#groupIdInput").val(),
                'color': $("#selectColor").val(),
                'scheduleTime': timeStart,
                'scheduleFinishTime': timeFinish, 
                'dayOfWeeks': week,      
             },                                                         
            success: function (data) {
             console.log(data);
                                                
             setTimeout(function(){  
             if(data === "errorTime"){
             $('#error').text('В это время уже есть занятие').show().delay(1500).fadeOut();        
             }             
             else if (data === "success"){
              $("#reloadCalendar").load(" #reloadCalendar");   
              $("#createSchedule").load(" #createSchedule");
              $("#reloadSchedule").load(" #reloadSchedule");
              $("#scheduleCreate").modal("toggle");
              }                                                                                                                
              }, 700)                            
          },
        })
      }          
   }
	</script>
	<script >
	$(function () {   
        $('#editSchedule').on('submit', function (e) {
          e.preventDefault();    
          validateForm();
        });
      });
	</script>
	
	<script >
            $(function(){
            	var timeStart = $('#timeForEditStart').text();
            	$('#timeInputStart').val(timeStart);
            	var timeFinish = $('#timeForEditFinish').text();
                $('#timeInputFinish').val(timeFinish);
                var days =  $('#datesForEdit').text();
                $('#dayOfWeekInput').val(days);
            });
            </script>
<script>
$("#checkAll").change(function () {
    $("input:checkbox").prop('checked', $(this).prop("checked"));
});
</script>
}

